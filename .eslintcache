[{"/Users/yolefirenk/Desktop/newUsof/usof/src/index.js":"1","/Users/yolefirenk/Desktop/newUsof/usof/src/reportWebVitals.js":"2","/Users/yolefirenk/Desktop/newUsof/usof/src/App.js":"3","/Users/yolefirenk/Desktop/newUsof/usof/src/users/UserId.js":"4","/Users/yolefirenk/Desktop/newUsof/usof/src/users/ImgUser.js":"5","/Users/yolefirenk/Desktop/newUsof/usof/src/questions/QuestionOwner.js":"6","/Users/yolefirenk/Desktop/newUsof/usof/src/questions/Statistic.js":"7","/Users/yolefirenk/Desktop/newUsof/usof/src/tags/TagWiki.js":"8","/Users/yolefirenk/Desktop/newUsof/usof/src/users/PreviewUser.js":"9","/Users/yolefirenk/Desktop/newUsof/usof/src/questions/MainQuestions.js":"10","/Users/yolefirenk/Desktop/newUsof/usof/src/tags/MainTags.js":"11","/Users/yolefirenk/Desktop/newUsof/usof/src/users/MainUsers.js":"12","/Users/yolefirenk/Desktop/newUsof/usof/src/header/Header.js":"13","/Users/yolefirenk/Desktop/newUsof/usof/src/footer/Footer.js":"14","/Users/yolefirenk/Desktop/newUsof/usof/src/packages/dataFormated.js":"15","/Users/yolefirenk/Desktop/newUsof/usof/src/questions/TaggedQuestions.js":"16","/Users/yolefirenk/Desktop/newUsof/usof/src/questions/QuestionId/QuestionId.js":"17","/Users/yolefirenk/Desktop/newUsof/usof/src/questions/QuestionId/Answers.js":"18","/Users/yolefirenk/Desktop/newUsof/usof/src/questions/QuestionId/Comments.js":"19","/Users/yolefirenk/Desktop/newUsof/usof/src/users/GetUsersTags.js":"20"},{"size":499,"mtime":1614524220000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1614183501000,"results":"23","hashOfConfig":"22"},{"size":1021,"mtime":1614604183000,"results":"24","hashOfConfig":"22"},{"size":2090,"mtime":1614613072000,"results":"25","hashOfConfig":"22"},{"size":564,"mtime":1614596392000,"results":"26","hashOfConfig":"22"},{"size":922,"mtime":1614529325000,"results":"27","hashOfConfig":"22"},{"size":296,"mtime":1614183501000,"results":"28","hashOfConfig":"22"},{"size":1425,"mtime":1614613018000,"results":"29","hashOfConfig":"22"},{"size":789,"mtime":1614517173000,"results":"30","hashOfConfig":"22"},{"size":3882,"mtime":1614704087000,"results":"31","hashOfConfig":"22"},{"size":3448,"mtime":1614705329000,"results":"32","hashOfConfig":"22"},{"size":3408,"mtime":1614704654000,"results":"33","hashOfConfig":"22"},{"size":3564,"mtime":1614623023000,"results":"34","hashOfConfig":"22"},{"size":218,"mtime":1614620488000,"results":"35","hashOfConfig":"22"},{"size":486,"mtime":1614529307000,"results":"36","hashOfConfig":"22"},{"size":4060,"mtime":1614704136000,"results":"37","hashOfConfig":"22"},{"size":2953,"mtime":1614604242000,"results":"38","hashOfConfig":"22"},{"size":1593,"mtime":1614604226000,"results":"39","hashOfConfig":"22"},{"size":493,"mtime":1614604137000,"results":"40","hashOfConfig":"22"},{"size":1120,"mtime":1614620771000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"11d4r5c",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"/Users/yolefirenk/Desktop/newUsof/usof/src/index.js",[],["89","90"],"/Users/yolefirenk/Desktop/newUsof/usof/src/reportWebVitals.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/App.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/users/UserId.js",["91"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction UserId() {\n    const {userID} = useParams();\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [userData, setUserData] = useState([]);\n\n    useEffect(() => {\n        axios.get(`https://api.stackexchange.com/2.2/users/${userID}?&site=stackoverflow&filter=!--1nZuvlSU9X&key=${process.env.REACT_APP_KEY}`)\n            .then((result) => {\n                setUserData(result.data.items[0]);\n                setIsLoaded(true);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n                console.log(error);\n            }\n        )\n    }, []);\n\n    if (error) {\n        return <h1>Something went wrong...</h1>;\n    } else if (!isLoaded) {\n        return <h1>Please, wait...</h1>;\n    } else {\n        return (\n            <>\n                <div className='mainUser'>\n                    <h1 className=\"oneUserName\">{userData.display_name}</h1>\n                    <div className=\"userLocation\">\n                        Location: {userData.location}\n                    </div>\n                    <div className=\"imgAndBadges\">\n                        <img className='bigUserImg' src={userData.profile_image} alt=\"imgUser\"/>\n                        <div className=\"badges\">\n                            <div className=\"badgesItem\"><div className=\"badge\" id=\"gold\"></div>{userData.badge_counts.gold}</div>\n                            <div className=\"badgesItem\"><div className=\"badge\" id=\"silver\"></div>{userData.badge_counts.silver}</div>\n                            <div className=\"badgesItem\"><div className=\"badge\" id=\"bronze\"></div>{userData.badge_counts.bronze}</div>\n                        </div>\n                    </div>\n                    <div dangerouslySetInnerHTML={{__html:userData.about_me}} className=\"aboutUser\"></div>   \n                </div>\n                \n            </>\n        )\n    }\n\n}\n \nexport default UserId;","/Users/yolefirenk/Desktop/newUsof/usof/src/users/ImgUser.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/questions/QuestionOwner.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/questions/Statistic.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/tags/TagWiki.js",["92"],"import React from 'react';\nimport * as axios from 'axios';\nimport {useEffect, useState} from 'react';\n\nfunction TagWiki(props) {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState();\n    let name = encodeURIComponent(props.name)\n\n    useEffect(() => {\n        axios.get(`https://api.stackexchange.com/2.2/tags/${name}/wikis?&site=stackoverflow&key=${process.env.REACT_APP_KEY}`)\n            .then((result) => {\n                setItems(result.data.items[0]);\n                setIsLoaded(true);\n            }, \n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n                console.log(error);\n            }\n        )\n    }, [])\n\n    if (error) {\n        return <span>Something went wrong...</span>;\n    } else if (!isLoaded) {\n        return <span>Please, wait...</span>;\n    } else {\n        if ((items) && (items.excerpt)) { \n            return (\n                <>\n                    <div className=\"tagWiki\">\n                        {(items.excerpt).length > 170 ? (items.excerpt).substring(0, 170) + \"...\" : items.excerpt}\n                    </div>\n                </>\n            );\n        } else {\n            return (\n                <div className=\"tagWiki\">\n                        no info\n                </div>\n            );\n        }\n        \n    }\n}\n\nexport default TagWiki;","/Users/yolefirenk/Desktop/newUsof/usof/src/users/PreviewUser.js",[],["93","94"],"/Users/yolefirenk/Desktop/newUsof/usof/src/questions/MainQuestions.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/tags/MainTags.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/users/MainUsers.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/header/Header.js",["95","96"],"import logo from '../images/logo.png';\nimport './header.css';\nimport { NavLink } from 'react-router-dom';\nimport * as axios from 'axios';\nimport {useEffect, useState} from 'react';\n\nfunction Header() {\n    const [status, setStatus] = useState(true);\n    const [disabled, setDisabled] = useState(true);\n    const [token, setToken] = useState('');\n    const [data, setData] = useState('');\n\n    // useEffect(() => {\n    //     window.SE.init({\n    //         clientId: 19555, // Здесь мы ставим выданный нам clientId\n    //         key: `${process.env.REACT_APP_KEY}`, // А здесь соответственно key\n    //         channelUrl: 'https://olefirenkoe.github.io/blank.html', // Особое внимание стоит уделить этому полю. Здесь нужно указать домен, на котором хостится и крутится приложение\n    //         complete: () => {\n    //             console.log(\"Ready for auth!\");\n    //             setDisabled(false);\n    //         }    \n    //     });                    \n    // }, []);\n\n    const logIn = () => {\n        console.log(\"Log in\");\n        window.SE.authenticate({\n            success: (data) => {\n                console.log('I got access'); \n                let tokens = encodeURIComponent(data.accessToken);\n                setToken(tokens);\n                axios.get(`https://api.stackexchange.com/2.2/me?site=stackoverflow&key=${process.env.REACT_APP_KEY}&access_token=${tokens}`)\n                    .then((result) => {\n                        setData(result.data.items[0]);\n                        setStatus(false);\n                    }, \n                    (error) => {\n                        console.log(error);\n                    }\n                ); \n            },\n            error: function() {  alert('Я не получил доступ :('); }, // Приложение не авторизовало пользователя\n        }) \n    }\n\n    const logOut = () => {\n        axios.get(`https://api.stackexchange.com/2.2/apps/${token}/de-authenticate?key=${process.env.REACT_APP_KEY}`)\n        .then(() => {\n            setStatus(true);\n        }, \n        (error) => {\n            console.log(error);\n        })\n        console.log(\"log out\");\n    }\n\n    const renderLogin = () => {\n        if (status === true) {\n            return (\n                <button id=\"log\" disabled={disabled} onClick={logIn}>Log in</button> \n            )\n        }else {\n            return (\n                <>\n                    <div className=\"profile\">\n                        <NavLink to={`/users/${data.user_id}`}><img id='userImg' alt='profilPhoto' src={data.profile_image}/></NavLink>\n                        <span id=\"userLogin\">{data.display_name}</span>\n                        <span id=\"userReputation\"><b>Reputation:</b> {data.reputation}</span>\n                    </div>\n                    <button id=\"log\" onClick={logOut}>Log out</button>\n                </>\n            );\n        }\n    }\n\n    return (\n        <header>\n                <NavLink to=\"/\">\n                    <img src={logo} className=\"logo\" alt=\"logo\"/>\n                </NavLink>   \n            <input type='search' placeholder='Search...'/>\n            <nav>\n                <li><NavLink to=\"/\">Main</NavLink></li>\n                <li><NavLink to=\"/users\">Users</NavLink></li>\n                <li><NavLink to=\"/tags\">Tags</NavLink></li> \n            </nav>\n            {renderLogin()}\n        </header>\n    );\n}\n\nexport default Header;","/Users/yolefirenk/Desktop/newUsof/usof/src/footer/Footer.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/packages/dataFormated.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/questions/TaggedQuestions.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/questions/QuestionId/QuestionId.js",["97"],"import { useParams } from \"react-router-dom\"\nimport axios from 'axios';\nimport './questionId.css';\nimport { NavLink } from 'react-router-dom';\nimport Comments from './Comments';\nimport Answers from './Answers';\nimport upVote from '../../images/up_vote.png';\nimport downVote from '../../images/down_vote.png';\nimport dataFormated from '../../packages/dataFormated';\nimport {useEffect, useState} from 'react';\n\nfunction QuestionInfo() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    let {questionId} = useParams();\n\n    useEffect(() => {\n        axios.get(`https://api.stackexchange.com/2.2/questions/${questionId}?&site=stackoverflow&filter=!LYA)NcjxVO1mgxq*)Lp_Eq&key=${process.env.REACT_APP_KEY}`)\n            .then((result) => {\n                setItems(result.data.items[0]);\n                setIsLoaded(true);\n            }, \n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n                console.log(error);\n            }\n        )\n    }, [])\n\n    if (error) {\n        return <h1>Something went wrong...</h1>;\n    } else if (!isLoaded) {\n        return <h1>Please, wait...</h1>;\n    } else {\n        return (\n            <div className=\"questionInfo\">\n                <h1>{items.title}</h1>\n                <div className=\"questionScore\">\n                    <img className=\"vote\" src={upVote} alt=\"upVote\"/>\n                    <span className=\"scoreCount\">{items.score}</span>  \n                    <img className=\"vote\" src={downVote} alt=\"downVote\"/>                                    \n                </div>\n                <div className=\"questionBody\" dangerouslySetInnerHTML={{__html:items.body}}></div>\n                <div className=\"questionTags\">{items.tags.map((tag) => <NavLink to={`/tags/${tag}`} key={tag} className=\"tagItem\">{tag}</NavLink>)}</div>\n                <div className=\"owner\">\n                    <p>asked {dataFormated(items.creation_date*1000)}</p>\n                    <NavLink to={`/users/${items.owner.user_id}`} className=\"userName\"><img alt=\"ownerImg\" className=\"ownerImg\" src={items.owner.profile_image}/></NavLink>\n                    <NavLink to={`/users/${items.owner.user_id}`} className=\"userName\">{items.owner.display_name}</NavLink>\n                    <p>{items.owner.reputation}</p>\n                </div> \n                <div className=\"comments\">\n                    {(items.comment_count > 0) ? <Comments comments={items.comments}/> : <p className=\"emptyComments\">Comments: {items.comment_count}</p>}\n                </div>\n                <div className=\"answers\">\n                    <h2>{items.answer_count}  {(items.answer_count === 1) ? \"Answer\" : \"Answers\"}</h2>\n                    {(items.answer_count > 0) ? <Answers answers={items.answers}/> : null}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default QuestionInfo;","/Users/yolefirenk/Desktop/newUsof/usof/src/questions/QuestionId/Answers.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/questions/QuestionId/Comments.js",[],"/Users/yolefirenk/Desktop/newUsof/usof/src/users/GetUsersTags.js",["98"],"import {useState, useEffect} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport * as axios from 'axios';\n\nfunction GetTags(props) {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        axios.get(`https://api.stackexchange.com/2.2/users/${props.id}/top-tags?site=stackoverflow&key=${process.env.REACT_APP_KEY}`)\n        .then((result) => {\n            setItems(result.data.items);\n            setIsLoaded(true);\n        }, \n        (error) => {\n            setIsLoaded(true);\n            setError(error); \n            console.log(error);\n        });\n    },[]);\n\n    if (error) {\n        return <span>Something went wrong...</span>;\n    } else if (!isLoaded) {\n        return <span>Please, wait...</span>;\n    } else {\n        return (\n            <>\n            {items.slice(0, 3).map((tags, index) =>  \n              <NavLink to={`/tags/${tags.tag_name}`} key={index} className=\"tags\">{tags.tag_name}</NavLink>\n            )}    \n        </>\n        );\n    }\n}  \n\nexport default GetTags;",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":23,"column":8,"nodeType":"105","endLine":23,"endColumn":10,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":23,"column":8,"nodeType":"105","endLine":23,"endColumn":10,"suggestions":"108"},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":5,"column":9,"nodeType":"113","messageId":"114","endLine":5,"endColumn":18},{"ruleId":"111","severity":1,"message":"115","line":9,"column":22,"nodeType":"113","messageId":"114","endLine":9,"endColumn":33},{"ruleId":"103","severity":1,"message":"116","line":30,"column":8,"nodeType":"105","endLine":30,"endColumn":10,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"118","line":21,"column":7,"nodeType":"105","endLine":21,"endColumn":9,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["123"],["120"],["121"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setDisabled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'questionId'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [userID]",{"range":"134","text":"135"},"Update the dependencies array to be: [name]",{"range":"136","text":"137"},"Update the dependencies array to be: [questionId]",{"range":"138","text":"139"},"Update the dependencies array to be: [props.id]",{"range":"140","text":"141"},[790,792],"[userID]",[757,759],"[name]",[1091,1093],"[questionId]",[688,690],"[props.id]"]