[{"C:\\Users\\User\\Desktop\\sprints\\uuu\\usof\\src\\index.js":"1","C:\\Users\\User\\Desktop\\sprints\\uuu\\usof\\src\\App.js":"2","C:\\Users\\User\\Desktop\\sprints\\uuu\\usof\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\sprints\\uuu\\usof\\src\\Header.js":"4"},{"size":1254,"mtime":1612036531384,"results":"5","hashOfConfig":"6"},{"size":158,"mtime":1611912422365,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1611912422373,"results":"8","hashOfConfig":"6"},{"size":3580,"mtime":1612379723333,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"12v21i9",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\User\\Desktop\\sprints\\uuu\\usof\\src\\index.js",[],["20","21"],"C:\\Users\\User\\Desktop\\sprints\\uuu\\usof\\src\\App.js",[],"C:\\Users\\User\\Desktop\\sprints\\uuu\\usof\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\sprints\\uuu\\usof\\src\\Header.js",["22"],"import React from 'react';\r\nimport logo from '../src/logo.png';\r\nimport '../src/header.css';\r\n\r\nlet tokens = null;\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: true,\r\n            disabled: false,\r\n            profilImage: null,\r\n            login: null,\r\n            reputation: null,\r\n            profilUrl: null\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        console.log(\"Log in\");\r\n\r\n        window.SE.authenticate({\r\n            success: async (data) => {\r\n                console.log('I got access'); \r\n                tokens = data;\r\n\r\n                let response = await fetch(`https://api.stackexchange.com/2.2/me?site=stackoverflow&key=qBt3pH)yY2*kx96ogUORkA((&access_token=${tokens.accessToken}`);\r\n                let user = await response.json();\r\n\r\n                console.log(user.items[0]);\r\n                this.renderProfile(user.items[0])\r\n            },\r\n            error: function(data) {  alert('Я не получил доступ :('); }, // Приложение не авторизовало пользователя\r\n        }) \r\n\r\n    }\r\n\r\n    renderProfile(obj) {\r\n        this.setState({\r\n            status: false,\r\n            profilImage: obj.profile_image,\r\n            login: obj.display_name,\r\n            reputation: obj.reputation,\r\n            profilUrl: obj.link\r\n        });\r\n        this.renderLogin();\r\n    }\r\n  \r\n    renderLogin() {\r\n        if (this.state.status === true) {\r\n            return (\r\n                <button id=\"log\" disabled={this.state.disabled} onClick={this.handleClick}>Log in</button> \r\n            )\r\n        }else {\r\n            return (\r\n                <div className=\"profile\">\r\n                    <a href={this.state.profilUrl}><img id='userImg' src={this.state.profilImage}/></a>\r\n                    <span id=\"userLogin\">{this.state.login}</span>\r\n                    <span id=\"userReputation\"><b>Reputation:</b> {this.state.reputation}</span>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.SE.init({\r\n            clientId: 19555, // Здесь мы ставим выданный нам clientId\r\n            key: 'qBt3pH)yY2*kx96ogUORkA((', // А здесь соответственно key\r\n            channelUrl: 'https://olefirenkoe.github.io/blank.html', // Особое внимание стоит уделить этому полю. Здесь нужно указать домен, на котором хостится и крутится приложение\r\n            complete: () => {\r\n                console.log(\"Ready for auth!\");\r\n                this.allowLogin();\r\n            }    \r\n        });  \r\n    }\r\n\r\n    allowLogin() {\r\n        this.setState({\r\n            disabled: false,\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <header>\r\n                <img src={logo} className=\"logo\" alt=\"logo\"/>\r\n                <span className=\"label\">stack <b>usof</b></span>\r\n                <input type='search' placeholder='Search...'/>\r\n                <nav>\r\n                <a href=\"main\">Main</a>\r\n                <a href=\"Users\">Users</a>\r\n                <a href=\"Tags\">Tags</a>\r\n                </nav>\r\n                {this.renderLogin()}\r\n            </header>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 19555 id\r\n// qBt3pH)yY2*kx96ogUORkA(( key \r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":61,"column":52,"nodeType":"29","endLine":61,"endColumn":100},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]